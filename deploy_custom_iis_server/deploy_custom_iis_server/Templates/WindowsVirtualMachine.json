{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "West Europe",
            "allowedValues": [
                "East US",
                "West US",
                "West Europe",
                "East Asia",
                "South East Asia"
            ],
            "metadata": {
                "description": "Geographical location of where the VM will be deployed."
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "defaultValue": "customiissrvstorage",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "newStorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Azure Storage Account Type."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "winadmin",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "P@ssw0rd1!",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2012-R2-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
            }
        },
        "VMName": {
            "type": "string",
            "defaultValue": "2012R2IISVM"
        },
        "VMSize": {
            "type": "string",
            "defaultValue": "Standard_A2",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D0",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4"
            ],
            "metadata": {
                "description": "The Size of the Virtual Machine you want to deploy."
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "Description": "Default Address prefix"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "Description": "Default Subnet Prefix"
            }
        },
        "vmPublicIPAddressName": {
            "type": "string",
            "defaultValue": "customiissrv",
            "metadata": {
                "description": "This is the FQDN for RDP Access into the VM."
            }
        },
        "CustomIISPSScriptAzureStorageURI": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/starkfell/azure-quickstart-templates/master/deploy_custom_iis_server/deploy_custom_iis_server/Scripts/deploy_custom_iis_server.ps1",
            "metadata": {
                "description": "The Location of the Custom PowerShell Script on GitHub."
            }
        },
        "CustomIISPSScriptFileName": {
            "type": "string",
            "defaultValue": "deploy_custom_iis_server.ps1",
            "metadata": {
                "description": "Name of the PowerShell Script."
            }
        }
    },
    "variables": {
        "location": "[parameters('location')]",
        "newStorageAccountName": "[parameters('newStorageAccountName')]",
        "newStorageAccountType": "[parameters('newStorageAccountType')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "windowsOSVersion": "[parameters('WindowsOSVersion')]",
        "VMName": "[parameters('VMName')]",
        "VMSize": "[parameters('VMSize')]",
        "OSDiskName": "[concat(variables('VMName'),'-OSDisk')]",
        "vmStorageAccountContainerName": "vhds",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "nicName": "[concat(variables('VMName'), 'NetworkInterface')]",
        "addressPrefix": "[parameters('addressPrefix')]",
        "subnetName": "TestVMSubnet",
        "subnetPrefix": "[parameters('subnetPrefix')]",
        "vmPublicIPAddressName": "[parameters('vmPublicIPAddressName')]",
        "virtualNetworkName": "TestVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "CustomIISPSScriptAzureStorageURI": "[parameters('CustomIISPSScriptAzureStorageURI')]",
        "CustomIISPSScriptFileName": "[parameters('CustomIISPSScriptFileName')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('newStorageAccountName')]"
            },
            "properties": {
                "accountType": "[variables('newStorageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vmPublicIPAddressName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('vmPublicIPAddressName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('vmPublicIPAddressName')]"
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('virtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('nicName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vmPublicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('vmName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vmName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('OSDiskName')]",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('VMName'), '/' , variables('CustomIISPSScriptFileName'))]",
                    "location": "[variables('location')]",
                    "apiVersion": "2015-05-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "tags": {
                        "displayName": "[concat(variables('VMName'), '/' , variables('CustomIISPSScriptFileName'))]"
                    },
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.4",
                        "settings": {
                            "fileUris": [
                                "[variables('CustomIISPSScriptAzureStorageURI')]"
                            ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Bypass -file ', variables('CustomIISPSScriptFileName'))]"
                        }
                    }
                }
            ]
        }
    ]
}
